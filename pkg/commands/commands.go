package commands

// CmdMap -
var CmdMap = []CmdDefinition{
	{
		Name:        "AUTH",
		Handler:     Auth,
		RequireAuth: false,
		UseGroup:    false,
		Args:        2,
		Usage:       "AUTH {username} {password}",
		Description: "Authenticate with a username and a password",
	}, {
		Name:        "USE_GROUP",
		Handler:     UseGroup,
		RequireAuth: true,
		UseGroup:    false,
		Args:        1,
		Usage:       "USE_GROUP {group}",
		Description: "Declare which group the client want to use",
	}, {
		Name:        "PUBLISH",
		Handler:     Publish,
		RequireAuth: true,
		UseGroup:    true,
		Args:        3,
		Usage:       "PUBLISH {queue_slug} {job_type} {job_payload}",
		Description: "Create a job in a queue and return the ID of the created job",
	}, {
		Name:        "SUBSCRIBE",
		Handler:     Subscribe,
		RequireAuth: true,
		UseGroup:    true,
		Args:        1,
		Usage:       "SUBSCRIBE {queue_slug}",
		Description: "Subscribe to a queue to receive jobs",
	}, {
		Name:        "UNSUBSCRIBE",
		Handler:     Unsubscribe,
		RequireAuth: true,
		UseGroup:    true,
		Args:        1,
		Usage:       "UNSUBSCRIBE {queue_slug}",
		Description: "The exact oposite of the SUBSCRIBE command",
	}, {
		Name:        "LIST_QUEUES",
		Handler:     ListQueues,
		RequireAuth: true,
		UseGroup:    true,
		Description: "List all queues in the current group",
	}, {
		Name:        "DELETE_QUEUE",
		Handler:     DeleteQueue,
		RequireAuth: true,
		UseGroup:    true,
		Args:        1,
		Usage:       "DELETE_QUEUE {queue_slug}",
		Description: "Delete a queue",
	}, {
		Name:        "PURGE_JOBS",
		Handler:     PurgeJobs,
		RequireAuth: true,
		UseGroup:    true,
		Args:        1,
		Usage:       "PURGE_JOBS {queue_slug}",
		Description: "Delete every jobs in a queue",
	}, {
		Name:        "PURGE_WORKERS",
		Handler:     PurgeWorkers,
		RequireAuth: true,
		UseGroup:    true,
		Args:        1,
		Usage:       "PURGE_WORKERS {queue_slug}",
		Description: "Unsubscribe every worker in a queue",
	}, {
		Name:        "LIST_JOBS",
		Handler:     ListJobs,
		RequireAuth: true,
		UseGroup:    true,
		Args:        1,
		Usage:       "LIST_JOBS {queue_slug}",
		Description: "List all jobs in a queue",
	}, {
		Name:        "UPDATE_JOB",
		Handler:     UpdateJob,
		RequireAuth: true,
		UseGroup:    true,
		Args:        2,
		Usage:       "UPDATE_JOB {job_id} {job_status}",
		Description: "Set the status of a job",
	}, {
		Name:        "DELETE_JOB",
		Handler:     DeleteJob,
		RequireAuth: true,
		UseGroup:    true,
		Args:        1,
		Usage:       "DELETE_JOB {job_id}",
		Description: "Delete a job",
	}, {
		Name:        "DISPATCH",
		Handler:     Dispatch,
		RequireAuth: false,
		UseGroup:    false,
		Description: "Will force the dispatch of jobs accross all the workers",
	}, {
		Name:        "RECURRENT_JOB",
		Handler:     DeclareRecurrentJob,
		RequireAuth: true,
		UseGroup:    true,
		Args:        3,
		Usage:       "RECURRENT_JOB {queue_slug} {job_type} {cron_instruction}",
		Description: "Declare recurrent job on a queue",
	}, {
		Name:        "LIST_RECURRENT_JOBS",
		Handler:     ListRecurrentJobs,
		RequireAuth: true,
		UseGroup:    true,
		Args:        1,
		Usage:       "LIST_RECURRENT_JOBS {queue_slug}",
		Description: "List all the recurrent jobs of a queue",
	}, {
		Name:        "DELETE_RECURRENT_JOB",
		Handler:     DeleteRecurrentJobs,
		RequireAuth: true,
		UseGroup:    true,
		Args:        1,
		Usage:       "DELETE_RECURRENT_JOB {job_entry_id}",
		Description: "Delete a recurrent job",
	}, {
		Name:        "HEALTH",
		Handler:     Health,
		RequireAuth: true,
		UseGroup:    false,
		Description: "Get the health of this jobatator instance",
	}, {
		Name:        "DEBUG_PARTS",
		Handler:     DebugParts,
		RequireAuth: false,
		UseGroup:    false,
		Args:        -1,
		Description: "Dump parsed command parts",
	}, {
		Name:        "DEBUG",
		Handler:     Debug,
		RequireAuth: false,
		UseGroup:    false,
		Description: "Dump server data in a human readable format, only work if debug is enabled",
	}, {
		Name:        "DEBUG_JSON",
		Handler:     DebugJSON,
		RequireAuth: false,
		UseGroup:    false,
		Description: "Dump server data in a JSON format, only work if debug is enabled",
	}, {
		Name:        "STOP_SERVER",
		Handler:     StopServer,
		RequireAuth: false,
		UseGroup:    false,
		Description: "Stop the server, only work if test_mode is enabled",
	}, {
		Name:        "PING",
		Handler:     Ping,
		RequireAuth: false,
		UseGroup:    false,
		Description: "Check if the connexion is alive",
	}, {
		Name:        "QUIT",
		Handler:     Quit,
		RequireAuth: false,
		UseGroup:    false,
		Description: "Disconnect from the server",
	}, {
		Name:        "SESSION",
		Handler:     Session,
		RequireAuth: true,
		UseGroup:    false,
		Description: "Get session data (user allowed groups for example)",
	},
}
